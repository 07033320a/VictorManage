/*
 * File: app/view/ShopManagement.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.ShopManagement', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.shoplist',

    height: 372,
    width: 624,
    layout: {
        type: 'fit'
    },
    title: '商铺管理',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'form',
                    dock: 'top',
                    layout: {
                        type: 'column'
                    },
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    margin: '0 10 10 0',
                                    fieldLabel: '商铺名称',
                                    labelAlign: 'right',
                                    name: 'shopName'
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            margin: '0 10 10 0',
                            fieldLabel: '用户名',
                            labelAlign: 'right',
                            name: 'userId'
                        },
                        {
                            xtype: 'container',
                            margin: '0 0 0 30',
                            items: [
                                {
                                    xtype: 'button',
                                    margin: '0 10 10 30',
                                    icon: 'data/img/zoom.gif',
                                    text: '查询',
                                    listeners: {
                                        click: {
                                            fn: me.onSearchBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        this.up('form').getForm().reset();
                                    },
                                    margin: '0 10 10 30',
                                    icon: 'data/img/reset.gif',
                                    text: '重置'
                                }
                            ]
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    store: 'ShopListStore',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        Ext.create('MyApp.view.ShopAdd', { closable: true, title: '新建商铺' }).show();


                                    },
                                    icon: 'data/img/add1.png',
                                    text: '新建'
                                },
                                {
                                    xtype: 'button',
                                    margins: '0 10 0 10',
                                    icon: 'data/img/delete1.png',
                                    text: '删除',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            xtype: 'pagingtoolbar',
                            dock: 'bottom',
                            width: 360,
                            displayInfo: true,
                            store: 'ShopListStore'
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'shopId',
                            text: 'ShopId'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'shopName',
                            text: '商铺名称',
                            editor: {
                                xtype: 'textfield',
                                name: 'shopName',
                                allowBlank: false
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'userId',
                            text: 'UserId'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 87,
                            dataIndex: 'username',
                            text: '用户名'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 79,
                            dataIndex: 'typeIds',
                            text: '类型ids'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var max = 1;
                                if(value && value.split(',').length>1 ){
                                    metaData.tdAttr = 'data-qtip='+ value +'';
                                }

                                return value;
                            },
                            width: 79,
                            dataIndex: 'typeNames',
                            text: '类型',
                            editor: {
                                xtype: 'combobox',
                                width: 150,
                                name: 'typeid',
                                editable: false,
                                displayField: 'typeName',
                                hiddenName: 'typeid',
                                multiSelect: true,
                                store: 'TypeStore',
                                valueField: 'typeId'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var str = "";
                                value = String(value);
                                if(value.indexOf("1")!=-1){
                                    str+= '天天美食,';
                                } if(value.indexOf('2')!=-1){
                                    str+= '玩乐生活,';
                                } if(value.indexOf('3')!=-1){
                                    str+= '魅力女人,';
                                } if(value.indexOf('4')!=-1){
                                    str+= '高调绅士,';
                                } if(value.indexOf('5')!=-1){
                                    str+= '快乐儿童,';
                                } if(value.indexOf('6')!=-1){
                                    str+= '手机数码,';
                                }

                                metaData.tdAttr = 'data-qtip='+ str.substr(0,str.length-1) +'';

                                return str.substr(0,str.length-1);
                                //1:天天美食,2:玩乐生活,3:魅力女人,4:高调绅士,5:快乐儿童,6:手机数码
                            },
                            width: 79,
                            dataIndex: 'typeId',
                            text: '模块',
                            editor: {
                                xtype: 'combobox',
                                name: 'models',
                                hiddenName: 'models',
                                multiSelect: true,
                                store: [
                                    [
                                        1,
                                        '天天美食'
                                    ],
                                    [
                                        2,
                                        '玩乐生活'
                                    ],
                                    [
                                        3,
                                        '魅力女人'
                                    ],
                                    [
                                        4,
                                        '高调绅士'
                                    ],
                                    [
                                        5,
                                        '快乐儿童'
                                    ],
                                    [
                                        6,
                                        '手机数码'
                                    ]
                                ]
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var max = 6;
                                if(value && value.length > max ){
                                    metaData.tdAttr = 'data-qtip='+ value +'';
                                }

                                return value;
                            },
                            dataIndex: 'address',
                            text: '地址',
                            editor: {
                                xtype: 'textfield',
                                name: 'address'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 55,
                            dataIndex: 'areaId',
                            text: 'AreaId'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 44,
                            dataIndex: 'status',
                            text: '状态',
                            editor: {
                                xtype: 'combobox',
                                name: 'status',
                                allowBlank: false,
                                editable: false,
                                hiddenName: 'status'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                return Ext.Date.format(new Date(Number(value.split('(')[1].split(')')[0])),'Y-m-d H:i')
                            },
                            width: 115,
                            dataIndex: 'addtime',
                            text: '添加时间'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                return Ext.Date.format(new Date(Number(value.split('(')[1].split(')')[0])),'Y-m-d H:i')
                            },
                            width: 115,
                            dataIndex: 'opentime',
                            text: '开业时间'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            width: 70,
                            dataIndex: 'adduser',
                            text: '添加者'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(value && value.length > max ){
                                    metaData.tdAttr = 'data-qtip="' + value + '"';
                                }
                                return value;
                            },
                            dataIndex: 'introduction',
                            text: '简介',
                            editor: {
                                xtype: 'textareafield',
                                name: 'introducation'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var max = 1;
                                if(value && value.length > max ){
                                    metaData.tdAttr = 'data-qtip="<img width=200px height=100px src= '+ value +' />"';
                                }

                                return value.length > max ? value : null;
                            },
                            dataIndex: 'piclist',
                            text: '列表图片地址'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var max = 1;
                                if(value && value.length > max ){
                                    metaData.tdAttr = 'data-qtip="<img width=200px height=100px src= '+ value +' />"';
                                }

                                return value.length > max ? value : null;
                            },
                            dataIndex: 'picdetail',
                            text: '详细页图片地址'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(value && value.length > max ){
                                    metaData.tdAttr = 'data-qtip="<img width=200px height=100px src= '+ value +' />"';
                                }

                                return value;
                            },
                            dataIndex: 'piclogo',
                            text: '首页图片地址'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'weixincode',
                            text: '微信二维码'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                return Ext.Date.format(new Date(Number(value.split('(')[1].split(')')[0])),'Y-m-d H:i')
                            },
                            width: 115,
                            dataIndex: 'modifytime',
                            text: '修改时间'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 62,
                            dataIndex: 'modifyuser',
                            text: '修改者id'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 43,
                            dataIndex: 'squre',
                            text: '面积'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'representproducts',
                            text: '代表产品'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'pricerange',
                            text: '价格区间'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'favorabledeals',
                            text: '优惠方案'
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.RowEditing', {
                            listeners: {
                                edit: {
                                    fn: me.onRowEditingEdit,
                                    scope: me
                                }
                            }
                        })
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onSearchBtnClick: function(button, e, eOpts) {
        var values = this.down('form').getForm().getValues();
        var store = this.down('grid').getStore();
        store.getProxy().extraParams = values;
        store.currentPage = 1;
        store.load({
            callback:function(r, option, success){
                if(success){

                }else{
                    Ext.Msg.alert('错误',option.getError().statusText);
                }

            }});
    },

    onButtonClick: function(button, e, eOpts) {
        var grid =  this.down('grid');

        var id = '';
        if(grid.getSelectionModel().selected.length>0){
            grid.getSelectionModel().selected.each(function(item){
                id+= item.get('shopId');
            });


            Ext.Ajax.request( {
                url : '/Shop/ShopDel',
                method : 'post',
                scope: this,
                params : {
                    id : id
                },
                success : function(response, options) {
                    this.down('grid').getStore().load();
                },
                failure : function() {
                }
            });

        }else{
            Ext.Msg.alert('提示','请选择记录！');
        }
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        debugger;
        context.record.data.typeid = context.newValues.typeid;
        context.record.data.models = '';
        for(var i = 0 ; i < context.newValues.models.length; i ++){
            context.record.data.models+=String(context.newValues.models[i]);
        }
        if(context.newValues.typeid.length>0){
            Ext.Ajax.request({     
                url:'/Manage/ShopUpdate',  
                params:context.record.data,  
                scope: this,
                success: function(resp,opts) {   
                    var respText = Ext.JSON.decode(resp.responseText);  
                    if(respText.success){
                        Ext.Msg.alert('提示','成功');
                        this.down('grid').getStore().load();
                    }else{
                        Ext.Msg.alert('提示','失败');
                    }

                },   
                failure: function(resp,opts) {   
                    Ext.Msg.alert('提示','失败');
                }     
            });
        }else{
            Ext.Msg.alert('提示','更新失败，请设置类型！');
        }

    }

});