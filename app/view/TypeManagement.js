/*
 * File: app/view/TypeManagement.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.TypeManagement', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.typemanagement',

    height: 372,
    width: 800,
    layout: {
        type: 'border'
    },
    title: '类型维护',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'gridpanel',
                    region: 'center',
                    store: 'TypeStore',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        Ext.create('MyApp.view.TypeAdd', { closable: true, title: '新建商铺类型' }).show();


                                    },
                                    itemId: 'newBtn',
                                    icon: 'data/img/add1.png',
                                    text: '新建'
                                },
                                {
                                    xtype: 'button',
                                    margins: '0 10 0 10',
                                    icon: 'data/img/delete1.png',
                                    text: '删除',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    icon: 'data/img/zoom.gif',
                                    text: '查询',
                                    listeners: {
                                        click: {
                                            fn: me.onSearchBtnClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'typeId',
                            text: '类型ID'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 134,
                            dataIndex: 'typeName',
                            text: '类型名称'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'fatherId',
                            text: '父类型ID'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                var store = Ext.getStore('TypeFatherStore');
                                var result = store.find('typeId',value,0,false,true);
                                if(result!=-1){
                                    return store.getAt(result).data.typeName;
                                }else{
                                    return '';
                                }

                            },
                            dataIndex: 'fatherId',
                            text: '父类型名称'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 190,
                            dataIndex: 'note',
                            text: '备注'
                        },
                        {
                            xtype: 'actioncolumn',
                            width: 84,
                            items: [
                                {
                                    handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                        var datagridPanel;
                                        datagridPanel = MyApp.getApplication().getController("TypeController").getTypeadd();
                                        if (!datagridPanel) {
                                            datagridPanel= Ext.create('MyApp.view.TypeAdd', { closable: true, title: '修改商铺类型' }).show();
                                            var form = datagridPanel.down('form').getForm();
                                            form.setValues(record.raw);
                                            if(record.raw.fatherId == 0){
                                                datagridPanel.down('[name=fatherId]').setReadOnly(true);
                                            }else{
                                                datagridPanel.down('[name=fatherId]').setReadOnly(false);
                                            }
                                        }

                                    },
                                    icon: 'data/img/forward.png'
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        var grid =  this.down('grid');

        var id = '';
        if(grid.getSelectionModel().selected.length>0){
            grid.getSelectionModel().selected.each(function(item){
                id+= item.get('typeId');
            });

            Ext.Ajax.request( {
                url : '/Manage/TypeDel',
                method : 'post',
                scope: this,
                params : {
                    id : id
                },
                success : function(response, options) {
                    this.down('grid').getStore().load();
                },
                failure : function() {

                }
            });

        }else{
            Ext.Msg.alert('提示','请选择记录！');
        }
    },

    onSearchBtnClick: function(button, e, eOpts) {
        Ext.getStore('TypeFatherStore').load();
        var store = this.down('grid').getStore();
        store.load({
            callback:function(r, option, success){
                if(success){
                }else{
                    Ext.Msg.alert('错误',option.getError().statusText);
                }

            }});
    }

});