/*
 * File: app/view/UserManagement.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.UserManagement', {
    extend: 'Ext.panel.Panel',
    alias: 'widget.userlist',

    height: 372,
    width: 624,
    layout: {
        type: 'fit'
    },
    title: '用户管理',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            dockedItems: [
                {
                    xtype: 'form',
                    dock: 'top',
                    layout: {
                        type: 'column'
                    },
                    bodyPadding: 10,
                    items: [
                        {
                            xtype: 'container',
                            layout: {
                                type: 'table'
                            },
                            items: [
                                {
                                    xtype: 'textfield',
                                    margin: '0 10 10 0',
                                    fieldLabel: '登录名',
                                    labelAlign: 'right',
                                    name: 'username'
                                },
                                {
                                    xtype: 'combobox',
                                    margin: '0 10 10 0',
                                    fieldLabel: '类型',
                                    labelAlign: 'right',
                                    name: 'type',
                                    editable: false,
                                    hiddenName: 'type',
                                    store: [
                                        [
                                            '',
                                            ''
                                        ],
                                        [
                                            '1',
                                            '普通用户'
                                        ],
                                        [
                                            '2',
                                            '会员'
                                        ],
                                        [
                                            '9',
                                            '管理员'
                                        ]
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'textfield',
                            margin: '0 10 10 0',
                            fieldLabel: '用户名',
                            labelAlign: 'right',
                            name: 'cnName'
                        },
                        {
                            xtype: 'textfield',
                            margin: '0 10 10 0',
                            fieldLabel: '邮箱',
                            labelAlign: 'right',
                            name: 'email'
                        },
                        {
                            xtype: 'container',
                            margin: '0 0 0 30',
                            items: [
                                {
                                    xtype: 'button',
                                    margin: '0 10 10 30',
                                    icon: 'data/img/zoom.gif',
                                    text: '查询',
                                    listeners: {
                                        click: {
                                            fn: me.onSearchBtnClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        this.up('form').getForm().reset();
                                    },
                                    margin: '0 10 10 30',
                                    icon: 'data/img/reset.gif',
                                    text: '重置'
                                }
                            ]
                        }
                    ]
                }
            ],
            items: [
                {
                    xtype: 'gridpanel',
                    store: 'UserListStore',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    handler: function(button, event) {
                                        Ext.create('MyApp.view.UserAdd', { closable: true, title: '新建用户' }).show();


                                    },
                                    icon: 'data/img/add1.png',
                                    text: '新建'
                                },
                                {
                                    xtype: 'button',
                                    margins: '0 10 0 10',
                                    icon: 'data/img/delete1.png',
                                    text: '删除',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    columns: [
                        {
                            xtype: 'rownumberer',
                            width: 41,
                            align: 'center',
                            text: '序号'
                        },
                        {
                            xtype: 'gridcolumn',
                            hidden: true,
                            dataIndex: 'id',
                            text: 'Id'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'username',
                            text: '登录名'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'password',
                            text: '密码',
                            editor: {
                                xtype: 'textfield',
                                name: 'password',
                                allowBlank: false
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'cnName',
                            text: '用户名',
                            editor: {
                                xtype: 'textfield',
                                name: 'cnName',
                                allowBlank: false
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(value == '1'){
                                    return '普通用户';
                                }else if(value == '2'){
                                    return '会员';
                                }else{
                                    return '管理员';
                                }
                            },
                            width: 76,
                            dataIndex: 'type',
                            text: '类型',
                            editor: {
                                xtype: 'combobox',
                                name: 'type',
                                allowBlank: false,
                                editable: false,
                                hiddenName: 'type',
                                store: [
                                    [
                                        '',
                                        ''
                                    ],
                                    [
                                        '1',
                                        '普通用户'
                                    ],
                                    [
                                        '2',
                                        '会员'
                                    ],
                                    [
                                        '9',
                                        '管理员'
                                    ]
                                ]
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'email',
                            text: '邮箱',
                            editor: {
                                xtype: 'textfield',
                                name: 'email',
                                inputType: 'email'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'mobilephone',
                            text: '电话',
                            editor: {
                                xtype: 'textfield',
                                name: 'mobilephone',
                                inputType: 'tel'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {

                                return Ext.Date.format(new Date(Number(value.split('(')[1].split(')')[0])),'Y-m-d H:i')
                            },
                            width: 112,
                            dataIndex: 'createDate',
                            text: '创建日期'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'dimensionalCodeUrl',
                            text: '二维码'
                        },
                        {
                            xtype: 'gridcolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                if(!value){
                                    return value;
                                }
                                var max = 1;
                                if(value.length > max ){
                                    metaData.tdAttr = 'data-qtip="<img width=200px height=100px src= '+ value +' />"';
                                }

                                return value.length > max ? value : null;
                            },
                            dataIndex: 'picUrl',
                            text: '用户头像'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 73,
                            dataIndex: 'status',
                            text: '状态'
                        },
                        {
                            xtype: 'gridcolumn',
                            width: 69,
                            dataIndex: 'sex',
                            text: '性别'
                        },
                        {
                            xtype: 'gridcolumn',
                            dataIndex: 'isEnabled',
                            text: '可见'
                        }
                    ],
                    plugins: [
                        Ext.create('Ext.grid.plugin.RowEditing', {
                            listeners: {
                                edit: {
                                    fn: me.onRowEditingEdit,
                                    scope: me
                                },
                                validateedit: {
                                    fn: me.onRowEditingValidateedit,
                                    scope: me
                                }
                            }
                        })
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onSearchBtnClick: function(button, e, eOpts) {
        var values = this.down('form').getForm().getValues();
        var store = this.down('grid').getStore();
        store.getProxy().extraParams = values;
        store.load({
            callback:function(r, option, success){
                if(success){

                }else{
                    Ext.Msg.alert('错误',option.getError().statusText);
                }

            }});
    },

    onButtonClick: function(button, e, eOpts) {
        var grid =  this.down('grid');

        var id = '';
        if(grid.getSelectionModel().selected.length>0){
            grid.getSelectionModel().selected.each(function(item){
                id+= item.get('id');
            });


            Ext.Ajax.request( {
                url : '/User/UserDel',
                method : 'post',
                scope: this,
                params : {
                    id : id
                },
                success : function(response, options) {
                    this.down('grid').getStore().load();
                },
                failure : function() {
                }
            });

        }else{
            Ext.Msg.alert('提示','请选择记录！');
        }
    },

    onRowEditingEdit: function(editor, context, eOpts) {
        Ext.Ajax.request({     
            url:'/Manage/UserUpdate',  
            params:context.record.data,  
            scope: this,
            success: function(resp,opts) {   
                var respText = Ext.JSON.decode(resp.responseText);  
                if(respText.success){
                    Ext.Msg.alert('提示','成功');
                    this.down('grid').getStore().load();
                }else{
                    Ext.Msg.alert('提示','失败');
                }

            },   
            failure: function(resp,opts) {   
                Ext.Msg.alert('提示','失败');
            }     
        });
    },

    onRowEditingValidateedit: function(editor, context, eOpts) {

    }

});